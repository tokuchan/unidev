# llvm-objdump
# Autogenerated from man page /usr/share/man/man1/llvm-objdump.1.gz
complete -c llvm-objdump -l adjust-vma -d 'Increase the displayed address by the specified offset'
complete -c llvm-objdump -l all-headers -d 'Display all available header information, relocation entries and the symbol t…'
complete -c llvm-objdump -l arch-name -d 'Target arch to disassemble for, see --version for available targets'
complete -c llvm-objdump -l archive-headers -d 'Display archive header information'
complete -c llvm-objdump -s a -d 'Alias for --archive-headers'
complete -c llvm-objdump -s C -d 'Alias for --demangle'
complete -c llvm-objdump -l debug-vars-indent -d 'Distance to indent the source-level variable display, relative to the start o…'
complete -c llvm-objdump -l debug-vars -d 'Print the locations (in registers or memory) of source-level variables alongs…'
complete -c llvm-objdump -l demangle -d 'Demangle symbol names'
complete -c llvm-objdump -l disassemble-all -d 'Disassemble all sections found in the input files'
complete -c llvm-objdump -l disassemble-symbols -d 'List of symbols to disassemble'
complete -c llvm-objdump -l disassemble-zeroes -d 'Do not skip blocks of zeroes when disassembling'
complete -c llvm-objdump -l disassembler-options -d 'Pass target specific disassembler options'
complete -c llvm-objdump -l disassemble -d 'Disassemble all executable sections found in the input files'
complete -c llvm-objdump -l dwarf -d 'Dump the specified DWARF debug sections'
complete -c llvm-objdump -l dynamic-reloc -d 'Display the dynamic relocation entries in the file'
complete -c llvm-objdump -l dynamic-syms -d 'Display the contents of the dynamic symbol table'
complete -c llvm-objdump -s D -d 'Alias for --disassemble-all'
complete -c llvm-objdump -s d -d 'Alias for --disassemble'
complete -c llvm-objdump -l fault-map-section -d 'Display the content of the fault map section'
complete -c llvm-objdump -l file-headers -d 'Display the contents of the overall file header'
complete -c llvm-objdump -l full-contents -d 'Display the content of each section'
complete -c llvm-objdump -s f -d 'Alias for --file-headers'
complete -c llvm-objdump -l headers -d 'Alias for --section-headers'
complete -c llvm-objdump -l help -d 'Display available options (--help-hidden for more)'
complete -c llvm-objdump -s h -d 'Alias for --section-headers'
complete -c llvm-objdump -s j -d 'Alias for --section'
complete -c llvm-objdump -l line-numbers -d 'When disassembling, display source line numbers.  Implies --disassemble'
complete -c llvm-objdump -s l -d 'Alias for --line-numbers'
complete -c llvm-objdump -l macho -d 'Use MachO specific object file parser'
complete -c llvm-objdump -l mattr -o a3 -d 'Target specific attributes (--mattr=\\,help\\/ for details)'
complete -c llvm-objdump -l mcpu -d 'Target a specific cpu type (--mcpu=\\,help\\/ for details)'
complete -c llvm-objdump -s M -d 'Alias for --disassembler-options='
complete -c llvm-objdump -s m -d 'Alias for --macho'
complete -c llvm-objdump -l no-leading-addr -d 'When disassembling, do not print leading addresses'
complete -c llvm-objdump -l no-print-imm-hex -d 'Do not use hex format for immediate values (default)'
complete -c llvm-objdump -l no-show-raw-insn -d 'When disassembling instructions, do not print the instruction bytes'
complete -c llvm-objdump -l prefix-strip -d 'Strip out initial directories from absolute paths'
complete -c llvm-objdump -l prefix -d 'Add prefix to absolute paths'
complete -c llvm-objdump -l print-imm-hex -d 'Use hex format for immediate values'
complete -c llvm-objdump -l private-headers -d 'Display format specific file headers'
complete -c llvm-objdump -s p -d 'Alias for --private-headers'
complete -c llvm-objdump -l raw-clang-ast -d 'Dump the raw binary contents of the clang AST section'
complete -c llvm-objdump -l reloc -d 'Display the relocation entries in the file'
complete -c llvm-objdump -s R -d 'Alias for --dynamic-reloc'
complete -c llvm-objdump -s r -d 'Alias for --reloc'
complete -c llvm-objdump -l section-headers -d 'Display summaries of the headers for each section'
complete -c llvm-objdump -l section -d 'Operate on the specified sections only.  With --macho dump segment,section'
complete -c llvm-objdump -l show-lma -d 'Display LMA column when dumping ELF section headers'
complete -c llvm-objdump -l source -d 'When disassembling, display source interleaved with the disassembly'
complete -c llvm-objdump -l stop-address -d 'Set the stop address for disassembling, printing relocations and printing sym…'
complete -c llvm-objdump -l symbol-description -d 'Add symbol description for disassembly.  This option is for XCOFF files only'
complete -c llvm-objdump -l symbolize-operands -d 'Symbolize instruction operands when disassembling'
complete -c llvm-objdump -l syms -d 'Display the symbol table'
complete -c llvm-objdump -s S -d 'Alias for --source'
complete -c llvm-objdump -s s -d 'Alias for --full-contents'
complete -c llvm-objdump -l triple -d 'Target triple to disassemble for, see --version for available targets'
complete -c llvm-objdump -s T -d 'Alias for --dynamic-syms'
complete -c llvm-objdump -s t -d 'Alias for --syms'
complete -c llvm-objdump -l unwind-info -d 'Display unwind information'
complete -c llvm-objdump -s u -d 'Alias for --unwind-info'
complete -c llvm-objdump -l version -d 'Display the version of this program'
complete -c llvm-objdump -s v -d 'Alias for --version'
complete -c llvm-objdump -l wide -d 'Ignored for compatibility with GNU objdump'
complete -c llvm-objdump -l x86-asm-syntax -d 'Emit AT&T-style disassembly'
complete -c llvm-objdump -s x -d 'Alias for --all-headers'
complete -c llvm-objdump -s z -d 'Alias for --disassemble-zeroes . SS "llvm-objdump MachO Specific Options:"'
complete -c llvm-objdump -l arch -d 'architecture(s) from a Mach-O file to dump'
complete -c llvm-objdump -l archive-member-offsets -d 'Print the offset to each archive member for Mach-O archives (requires --macho…'
complete -c llvm-objdump -l bind -d 'Display mach-o binding info'
complete -c llvm-objdump -l data-in-code -d 'Print the data in code table for Mach-O objects (requires --macho)'
complete -c llvm-objdump -l dis-symname -d 'disassemble just this symbol\'s instructions (requires --macho)'
complete -c llvm-objdump -l dsym -d 'Use . dSYM file for debug info'
complete -c llvm-objdump -l dylib-id -d 'Print the shared library\'s id for the dylib Mach-O file (requires --macho)'
complete -c llvm-objdump -l dylibs-used -d 'Print the shared libraries used for linked Mach-O files (requires --macho)'
complete -c llvm-objdump -l exports-trie -d 'Display mach-o exported symbols'
complete -c llvm-objdump -l full-leading-addr -d 'Print full leading address'
complete -c llvm-objdump -l function-starts -d 'Print the function starts table for Mach-O objects (requires --macho)'
complete -c llvm-objdump -s g -d 'Print line information from debug info if available'
complete -c llvm-objdump -l indirect-symbols -d 'Print indirect symbol table for Mach-O objects (requires --macho)'
complete -c llvm-objdump -l info-plist -d 'Print the info plist section as strings for Mach-O objects (requires --macho)'
complete -c llvm-objdump -l lazy-bind -d 'Display mach-o lazy binding info'
complete -c llvm-objdump -l link-opt-hints -d 'Print the linker optimization hints for Mach-O objects (requires --macho)'
complete -c llvm-objdump -l no-leading-headers -d 'Print no leading headers '
complete -c llvm-objdump -l non-verbose -d 'Print the info for Mach-O objects in non-verbose or numeric form (requires --…'
complete -c llvm-objdump -l objc-meta-data -d 'Print the Objective-C runtime meta data for Mach-O files (requires --macho)'
complete -c llvm-objdump -l private-header -d 'Display only the first format specific file header'
complete -c llvm-objdump -l rebase -d 'Display mach-o rebasing info'
complete -c llvm-objdump -l rpaths -d 'Print the runtime search paths for the Mach-O file (requires --macho)'
complete -c llvm-objdump -l universal-headers -d 'Print Mach-O universal headers (requires --macho)'
complete -c llvm-objdump -l start-address
complete -c llvm-objdump -l no-symbolic-operands
complete -c llvm-objdump -l weak-bind -d 'Display mach-o weak binding info'

